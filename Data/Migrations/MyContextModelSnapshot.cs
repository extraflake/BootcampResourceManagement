// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Data.Models.Account", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("IsDelete");

                    b.Property<string>("Password");

                    b.Property<string>("SecurityAnswer");

                    b.Property<string>("SecurityQuestion");

                    b.Property<string>("Token");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("tb_m_account");
                });

            modelBuilder.Entity("Data.Models.Asset", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Employee_Id");

                    b.Property<int>("IsDelete");

                    b.Property<int>("Number");

                    b.Property<string>("Type_Id");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Employee_Id");

                    b.HasIndex("Type_Id");

                    b.ToTable("tb_m_asset");
                });

            modelBuilder.Entity("Data.Models.Batch", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DeletedBy");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("IsDelete");

                    b.Property<DateTime>("StartDate");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("tb_m_batch");
                });

            modelBuilder.Entity("Data.Models.BatchClass", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Batch_Id");

                    b.Property<int>("Class_Id");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("IsDelete");

                    b.Property<int>("Quantity");

                    b.Property<string>("Room_Id");

                    b.Property<string>("Trainer_Id");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Batch_Id");

                    b.HasIndex("Class_Id");

                    b.HasIndex("Room_Id");

                    b.HasIndex("Trainer_Id");

                    b.ToTable("tb_m_batch_class");
                });

            modelBuilder.Entity("Data.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("IsDelete");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("tb_m_class");
                });

            modelBuilder.Entity("Data.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("IsDelete");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("tb_m_customer");
                });

            modelBuilder.Entity("Data.Models.Employee", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("Hiring_Location");

                    b.Property<int>("IsDelete");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("tb_m_employee");
                });

            modelBuilder.Entity("Data.Models.EmployeeAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Asset_Id");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Employee_Id");

                    b.Property<int>("IsDelete");

                    b.Property<string>("Note");

                    b.Property<DateTime?>("ReceiveDate");

                    b.Property<DateTime?>("ReturnDate");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Asset_Id");

                    b.HasIndex("Employee_Id");

                    b.ToTable("tb_m_employee_asset");
                });

            modelBuilder.Entity("Data.Models.InterviewHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Customer_Id");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Employee_Id");

                    b.Property<DateTime?>("InterviewDate");

                    b.Property<string>("InterviewTime");

                    b.Property<string>("Interviewer");

                    b.Property<int>("IsDelete");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Customer_Id");

                    b.HasIndex("Employee_Id");

                    b.ToTable("tb_t_interviewhistory");
                });

            modelBuilder.Entity("Data.Models.Participant", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Batch_Class");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Grade");

                    b.Property<int>("IsDelete");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Batch_Class");

                    b.ToTable("tb_m_participant");
                });

            modelBuilder.Entity("Data.Models.Placement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Customer_Id");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DeletedBy");

                    b.Property<string>("Employee_Id");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("IsDelete");

                    b.Property<string>("RelationName");

                    b.Property<string>("RelationPhone");

                    b.Property<DateTime>("StartDate");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Customer_Id");

                    b.HasIndex("Employee_Id");

                    b.ToTable("tb_m_placement");
                });

            modelBuilder.Entity("Data.Models.Room", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("IsDelete");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("tb_m_room");
                });

            modelBuilder.Entity("Data.Models.Type", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DeletedBy");

                    b.Property<int>("IsDelete");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("tb_m_type");
                });

            modelBuilder.Entity("Data.Models.Asset", b =>
                {
                    b.HasOne("Data.Models.Participant", "Participant")
                        .WithMany()
                        .HasForeignKey("Employee_Id");

                    b.HasOne("Data.Models.Type", "type")
                        .WithMany()
                        .HasForeignKey("Type_Id");
                });

            modelBuilder.Entity("Data.Models.BatchClass", b =>
                {
                    b.HasOne("Data.Models.Batch", "Batch")
                        .WithMany()
                        .HasForeignKey("Batch_Id");

                    b.HasOne("Data.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("Class_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Data.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("Room_Id");

                    b.HasOne("Data.Models.Participant", "Participant")
                        .WithMany()
                        .HasForeignKey("Trainer_Id");
                });

            modelBuilder.Entity("Data.Models.EmployeeAsset", b =>
                {
                    b.HasOne("Data.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("Asset_Id");

                    b.HasOne("Data.Models.Participant", "Employee")
                        .WithMany()
                        .HasForeignKey("Employee_Id");
                });

            modelBuilder.Entity("Data.Models.InterviewHistory", b =>
                {
                    b.HasOne("Data.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("Customer_Id");

                    b.HasOne("Data.Models.Participant", "Employee")
                        .WithMany()
                        .HasForeignKey("Employee_Id");
                });

            modelBuilder.Entity("Data.Models.Participant", b =>
                {
                    b.HasOne("Data.Models.BatchClass", "BatchClass")
                        .WithMany()
                        .HasForeignKey("Batch_Class");
                });

            modelBuilder.Entity("Data.Models.Placement", b =>
                {
                    b.HasOne("Data.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("Customer_Id");

                    b.HasOne("Data.Models.Participant", "Employee")
                        .WithMany()
                        .HasForeignKey("Employee_Id");
                });
#pragma warning restore 612, 618
        }
    }
}
